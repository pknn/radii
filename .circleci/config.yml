version: 2
jobs:
  test:
    docker:
      - image: circleci/python:jessie-node-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Setup venv and installing dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            sudo pip install -r requirements.txt
      - run:
          name: Migrate database
          command: |
            . venv/bin/activate
            flask db init
            sed -i "10i\import sqlalchemy_utils" ./migrations/script.py.mako
            flask db migrate
            flask db upgrade
      - run: mkdir test-reports
      - run:
          name: Download Selenium
          command: curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium
          command: java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true
      - run:
          name: Run Tests
          command: |
            sudo pip install pytest pytest-cov
            pytest --cov=./
            sudo pip install codecov
            codecov

  build:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Setup venv and installing dependencies
          command: |
            python3 -m venv venv
            echo 'export IMAGE_NAME=radii-app' >> $BASH_ENV
            . venv/bin/activate
            sudo pip install -r requirements.txt
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            ./scripts/pack.sh

  deploy:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Deploy to GCP
          command: |
            ./scripts/deploy.sh

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              ignore: /feature\/.*|/hotfix\/.*/
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
  